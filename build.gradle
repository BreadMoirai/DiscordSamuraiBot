plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '1.2.4'
    id 'java'
    id 'idea'
    id 'com.sedmelluq.jdaction' version '1.0.1'
}

idea.module.downloadJavadoc = true

def majorVersion = 6
def minorVersion = 0
mainClassName = "com.github.breadmoirai.samurai.Bot"

def forRelease = false;

sourceSets.main.java {
    exclude 'com/github/breadmoirai/samurai/command'
    exclude 'com/github/breadmoirai/samurai/database'
    exclude 'com/github/breadmoirai/samurai/files'
    exclude 'com/github/breadmoirai/samurai/items'
    exclude 'com/github/breadmoirai/samurai/messages'

}

repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile 'org.codehaus.groovy:groovy:2.4.8'

    compile 'net.dv8tion:JDA:3.5.0_335'
    compile 'com.sedmelluq:lavaplayer:1.2.47'
    compile 'com.sedmelluq:jda-nas:1.0.5'

//    compile 'com.github.breadmoirai:breadbot-framework:0.12.5'
    compile 'com.github.BreadMoirai:BreadBotFramework:d997733e1e6b72bf1ad6c09f28e9353ac27d33b6'

    compile 'net.sf.trove4j:trove4j:3.0.3'
    compile 'org.reflections:reflections:0.9.10'
    compile 'com.typesafe:config:1.3.1'

    //webparsing
    compile 'org.jsoup:jsoup:1.11.2'

    //logging
    compile 'io.sentry:sentry:1.6.8'
    compile 'io.sentry:sentry-logback:1.6.8'

    //google
    compile 'com.google.api-client:google-api-client:1.22.0'
    compile 'com.google.apis:google-api-services-youtube:v3-rev183-1.22.0'

    //database
    compile 'org.apache.derby:derby:10.14.1.0'
    compile 'org.jdbi:jdbi3:3.0.0-beta1'
    compile 'org.jdbi:jdbi3-parent:3.0.0-beta1'
    compile 'org.jdbi:jdbi3-sqlobject:3.0.0-beta1'

    compile 'ai.api:libai:1.4.8'

    compile 'org.jetbrains:annotations:13.0'

    compile 'org.apache.commons:commons-text:1.2'

    testCompile group: 'junit', name: 'junit', version: '4.11'
}

tasks.create('incrementVersionCode', {
    def file = file("version.txt")
    if (!file.exists()) {
        file.createNewFile()
        file.write('0')
    }
    println(":incrementVersionCode - Incrementing Version Code...")
    def versionFile = file
    def mVersionCode = Integer.parseInt(versionFile.getText())
    def mNextVersionCode = mVersionCode + 1
    println(":incrementVersionCode - previous:" + mVersionCode)
    println(":incrementVersionCode - current :" + mNextVersionCode)
    versionFile.write(mNextVersionCode as String)
})

version = "${majorVersion}.${minorVersion}.${file("version.txt").getText()}".toString()


run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-parameters'
}

shadowJar.dependsOn(incrementVersionCode)
